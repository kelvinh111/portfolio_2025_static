{"mappings":"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","sources":["<anon>","app.js"],"sourcesContent":["// Define a function to detect mobile devices\nfunction isMobileDevice() {\n    return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || \"ontouchstart\" in window || navigator.maxTouchPoints > 0 || window.matchMedia(\"(pointer: coarse)\").matches;\n}\n(function() {\n    const cursor = new MouseFollower();\n    cursor.setText(\"Drag me\");\n    if (!isMobileDevice()) {\n        // Mouse events\n        document.addEventListener(\"mousedown\", ()=>{\n            cursor.setText(\"Thanks for Visiting\");\n        });\n        document.addEventListener(\"mouseup\", ()=>{\n            cursor.removeText();\n        });\n    } else {\n        function updateCursorPosition(touch) {\n            const x = touch.clientX;\n            const y = touch.clientY;\n            // Simulate mousemove event\n            const mouseEvent = new MouseEvent(\"mousemove\", {\n                clientX: x,\n                clientY: y,\n                bubbles: true\n            });\n            document.body.dispatchEvent(mouseEvent);\n        }\n        updateCursorPosition({\n            clientX: 500,\n            clientY: 340\n        });\n        document.addEventListener(\"touchstart\", (event)=>{\n            cursor.addState(\"-active\");\n            cursor.setText(\"Thanks for Visiting\");\n            updateCursorPosition(event.touches[0]);\n        }, {\n            passive: false\n        });\n        document.addEventListener(\"touchmove\", (event)=>{\n            updateCursorPosition(event.touches[0]);\n        }, {\n            passive: false\n        });\n        document.addEventListener(\"touchend\", ()=>{\n            cursor.removeState(\"-active\");\n            cursor.removeText();\n        });\n    }\n})();\n// Polyfill for requestAnimationFrame and cancelAnimationFrame\n!function(global) {\n    \"use strict\";\n    let lastTime = 0;\n    let vendors = [\n        \"webkit\",\n        \"moz\",\n        \"ms\",\n        \"o\"\n    ];\n    let requestAnimationFrame1 = global.requestAnimationFrame;\n    let cancelAnimationFrame = global.cancelAnimationFrame;\n    let prefix;\n    // Check for vendor-prefixed versions\n    for(let i = 0; i < vendors.length && (!requestAnimationFrame1 || !cancelAnimationFrame); i++){\n        prefix = vendors[i];\n        requestAnimationFrame1 = requestAnimationFrame1 || global[prefix + \"RequestAnimationFrame\"];\n        cancelAnimationFrame = cancelAnimationFrame || global[prefix + \"CancelAnimationFrame\"] || global[prefix + \"CancelRequestAnimationFrame\"];\n    }\n    // Fallback to setTimeout if necessary\n    if (!requestAnimationFrame1 || !cancelAnimationFrame) {\n        requestAnimationFrame1 = function(callback) {\n            let currentTime = new Date().getTime();\n            let timeToCall = Math.max(0, 16 - (currentTime - lastTime));\n            let id = global.setTimeout(function() {\n                callback(currentTime + timeToCall);\n            }, timeToCall);\n            lastTime = currentTime + timeToCall;\n            return id;\n        };\n        cancelAnimationFrame = function(id) {\n            global.clearTimeout(id);\n        };\n    }\n    // Assign the correct methods to the global object\n    global.requestAnimationFrame = requestAnimationFrame1;\n    global.cancelAnimationFrame = cancelAnimationFrame;\n}(window);\n(function(global) {\n    \"use strict\";\n    // Define the ParticleEffects namespace and utility functions\n    const ParticleEffects = global.ParticleEffects = {};\n    ParticleEffects.isTouch = \"ontouchstart\" in document.documentElement;\n    ParticleEffects.getTaggedElem = function(element, tagName) {\n        if (!element.dataset.icon) return false;\n        while(element && element.nodeType !== 9){\n            if (element.nodeName && element.nodeName.toLowerCase() === tagName) return element;\n            element = element.parentNode;\n        }\n        return false;\n    };\n    ParticleEffects.charCount = 0;\n    ParticleEffects.charElems = [];\n    ParticleEffects.parseForParticles = function(element) {\n        let words = element.textContent.split(\" \");\n        let icon = element.dataset?.icon;\n        if (icon) {\n            words = [\n                \" \"\n            ];\n            element.dataset.icon = \"\";\n        }\n        while(element.firstChild)element.removeChild(element.firstChild);\n        let fragment = document.createDocumentFragment();\n        let wordSpans = [];\n        let charSpans = [];\n        for(let i = 0; i < words.length; i++){\n            let word = words[i];\n            let wordSpan = document.createElement(\"span\");\n            wordSpan.className = \"word\";\n            wordSpans.push(wordSpan);\n            let chars = word.split(\"\");\n            for(let j = 0; j < chars.length; j++){\n                let charSpan = document.createElement(\"span\");\n                charSpan.className = \"char\";\n                charSpan.textContent = chars[j];\n                if (icon) {\n                    charSpan.textContent = \"\";\n                    charSpan.dataset.icon = icon;\n                }\n                charSpans.push(charSpan);\n                wordSpan.appendChild(charSpan);\n                ParticleEffects.charCount++;\n            }\n            fragment.appendChild(wordSpan);\n            fragment.appendChild(document.createTextNode(\" \"));\n        }\n        element.appendChild(fragment);\n        return charSpans;\n    };\n    // Sparkle effect for hovered elements using ES6 Classes\n    let currentElement;\n    class SparkleEffect {\n        constructor(element){\n            this.element = element;\n            this.chars = element.querySelectorAll(\".char\");\n            this.charsLen = this.chars.length;\n            if (this.charsLen) {\n                this.endIndex = 0;\n                this.startIndex = 0;\n                this.hueIndex = Math.floor(360 * Math.random());\n                this.colors = [];\n                this.isHovered = true;\n                this.isSparkling = true;\n                this.sparkle();\n                currentElement = element;\n                document.addEventListener(\"mouseover\", this, false);\n            }\n        }\n        handleEvent(event) {\n            let handlerName = event.type + \"Handler\";\n            if (this[handlerName]) this[handlerName](event);\n        }\n        mouseoverHandler(event) {\n            if (!this.element.contains(event.target)) {\n                this.isHovered = false;\n                currentElement = null;\n                document.removeEventListener(\"mouseover\", this, false);\n            }\n        }\n        sparkle() {\n            this.endIndex = Math.min(this.endIndex + 1, this.charsLen);\n            let hue = 10 * this.hueIndex % 240 + 120;\n            let color = this.isHovered ? \"hsl(\" + hue + \", 70%, 80%)\" : \"#00073c\";\n            this.colors.unshift(color);\n            for(let i = this.startIndex; i < this.endIndex; i++)this.chars[i].style.color = this.colors[i];\n            if (this.isHovered) this.hueIndex++;\n            else this.startIndex = Math.min(this.startIndex + 1, this.charsLen);\n            this.isSparkling = this.startIndex !== this.charsLen;\n            if (this.isSparkling) requestAnimationFrame(this.sparkle.bind(this));\n        }\n    }\n    ParticleEffects.onMouseover = function(event) {\n        let anchor = ParticleEffects.getTaggedElem(event.target, \"a\");\n        if (!ParticleEffects.isCursorActive && anchor && anchor !== currentElement) new SparkleEffect(anchor);\n    };\n    // Particle system for characters using ES6 Classes\n    let cursorX, cursorY;\n    const TAU = 2 * Math.PI;\n    const interactionRadius = 250;\n    const transformProperty = getVendorPrefixedProperty(\"transform\");\n    let particles = ParticleEffects.charParticles = [];\n    let particleIndex = 0;\n    let isAllParticlesSettled = true;\n    let isInitialized = false;\n    // Feature detection functions\n    function supportsTransforms() {\n        const style = document.createElement(\"div\").style;\n        return \"transform\" in style || \"WebkitTransform\" in style || \"MozTransform\" in style || \"msTransform\" in style || \"OTransform\" in style;\n    }\n    function supports3DTransforms() {\n        const div = document.createElement(\"div\");\n        div.style.cssText = \"transform: rotateY(45deg);\";\n        const has3d = div.style.transform !== \"\";\n        if (has3d) return true;\n        const prefixes = [\n            \"Webkit\",\n            \"Moz\",\n            \"ms\",\n            \"O\"\n        ];\n        for(let i = 0; i < prefixes.length; i++){\n            div.style.cssText = prefixes[i] + \"Transform: rotateY(45deg);\";\n            if (div.style[prefixes[i] + \"Transform\"] !== \"\") return true;\n        }\n        return false;\n    }\n    const hasTransforms = supportsTransforms();\n    const has3DTransforms = supports3DTransforms();\n    class CharParticle {\n        constructor(element){\n            this.index = particleIndex++;\n            this.element = element;\n            this.x = 0;\n            this.y = 0;\n            this.angle = 0;\n            this.scale = 1;\n            this.velocityX = 0;\n            this.velocityY = 0;\n            this.velocityR = 0;\n            this.isSettled = true;\n            this.wasSettled = true;\n            this.updatePosition();\n        }\n        updatePosition() {\n            let elem = this.element;\n            this.width = elem.offsetWidth;\n            this.height = elem.offsetHeight;\n            this.originX = elem.offsetLeft + this.width / 2;\n            this.originY = elem.offsetTop + this.height / 2;\n        }\n        update() {\n            let dx = cursorX - (this.originX + this.x);\n            let dy = cursorY - (this.originY + this.y);\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            let rotationForce = 0;\n            if (ParticleEffects.isCursorActive && interactionRadius > distance) {\n                let interactionStrength = 1 - distance / interactionRadius;\n                let angleToCursor = Math.atan2(dy, dx);\n                rotationForce = angleToCursor - Math.PI / 2;\n                rotationForce *= Math.min(3 * interactionStrength, 1);\n                let angleDifference = Math.abs(rotationForce - this.angle);\n                if (Math.abs(rotationForce - TAU - this.angle) < angleDifference) rotationForce -= TAU;\n                else if (Math.abs(rotationForce + TAU - this.angle) < angleDifference) rotationForce += TAU;\n                interactionStrength *= 3.5 * interactionStrength;\n                this.velocityX += Math.cos(angleToCursor) * -interactionStrength;\n                this.velocityY += Math.sin(angleToCursor) * -interactionStrength;\n            }\n            this.angle = this.angle % TAU;\n            this.velocityX += 0.005 * (0 - this.x);\n            this.velocityY += 0.005 * (0 - this.y);\n            this.velocityR += rotationForce - this.angle;\n            this.x += this.velocityX;\n            this.y += this.velocityY;\n            this.angle += 0.01 * this.velocityR;\n            this.velocityX *= 0.95;\n            this.velocityY *= 0.95;\n            this.velocityR *= 0.95;\n            let totalDistance = Math.sqrt(this.x * this.x + this.y * this.y);\n            this.scale = 2 * (totalDistance / interactionRadius) + 1;\n            let isCurrentlySettled = Math.abs(this.x) < 0.03 && Math.abs(this.y) < 0.03 && Math.abs(this.angle) < 0.004 && Math.abs(this.scale - 1) < 0.03;\n            this.isSettled = this.wasSettled && isCurrentlySettled;\n            isAllParticlesSettled = isAllParticlesSettled && this.isSettled;\n            this.wasSettled = isCurrentlySettled;\n            this.render();\n        }\n        render() {\n            if (hasTransforms) {\n                if (has3DTransforms) this.element.style[transformProperty] = this.isSettled ? \"none\" : `translate3d(${this.x}px, ${this.y}px, 0) scale(${this.scale}) rotate(${this.angle}rad)`;\n                else this.element.style[transformProperty] = this.isSettled ? \"none\" : `translate(${this.x}px, ${this.y}px) scale(${this.scale}) rotate(${this.angle}rad)`;\n            } else {\n                this.element.style.left = this.x + \"px\";\n                this.element.style.top = this.y + \"px\";\n            }\n        }\n    }\n    function onMouseDown(event) {\n        activateCursor(event, event);\n    }\n    function onTouchStart(event) {\n        if (!ParticleEffects.isCursorActive) {\n            let touch = event.changedTouches[0];\n            if (touch) {\n                primaryTouchId = touch.identifier;\n                activateCursor(touch, event);\n            }\n        }\n    }\n    function activateCursor(event, originalEvent) {\n        ParticleEffects.isCursorActive = true;\n        ParticleEffects.areAllCharParticlesSettled = false;\n        cursorX = event.pageX;\n        cursorY = event.pageY;\n        originalEvent.preventDefault();\n        if (ParticleEffects.isTouch) {\n            global.addEventListener(\"touchmove\", onTouchMove, false);\n            global.addEventListener(\"touchend\", onTouchEnd, false);\n        } else {\n            global.addEventListener(\"mousemove\", onMouseMove, false);\n            global.addEventListener(\"mouseup\", onMouseUp, false);\n        }\n    }\n    function onMouseMove(event) {\n        updateCursorPosition(event);\n    }\n    function onTouchMove(event) {\n        if (ParticleEffects.isCursorActive) for(let i = 0; i < event.changedTouches.length; i++){\n            let touch = event.changedTouches[i];\n            if (touch.identifier === primaryTouchId) {\n                updateCursorPosition(touch);\n                break;\n            }\n        }\n    }\n    function onTouchEnd(event) {\n        for(let i = 0; i < event.changedTouches.length; i++){\n            let touch = event.changedTouches[i];\n            if (touch.identifier === primaryTouchId) {\n                deactivateCursor();\n                break;\n            }\n        }\n    }\n    function updateCursorPosition(event) {\n        cursorX = parseInt(event.pageX, 10);\n        cursorY = parseInt(event.pageY, 10);\n    }\n    function onMouseUp() {\n        ParticleEffects.isCursorActive = false;\n        global.removeEventListener(\"mousemove\", onMouseMove, false);\n        global.removeEventListener(\"mouseup\", onMouseUp, false);\n    }\n    function deactivateCursor() {\n        ParticleEffects.isCursorActive = false;\n        if (ParticleEffects.isTouch) {\n            global.removeEventListener(\"touchmove\", onTouchMove, false);\n            global.removeEventListener(\"touchend\", onTouchEnd, false);\n        } else {\n            global.removeEventListener(\"mousemove\", onMouseMove, false);\n            global.removeEventListener(\"mouseup\", onMouseUp, false);\n        }\n    }\n    function animate() {\n        if (!ParticleEffects.areAllCharParticlesSettled) {\n            isAllParticlesSettled = true;\n            for(let i = 0, len = particles.length; i < len; i++)particles[i].update();\n            ParticleEffects.areAllCharParticlesSettled = isAllParticlesSettled;\n        }\n        requestAnimationFrame(animate);\n    }\n    let primaryTouchId;\n    ParticleEffects.addCharParticles = function(elements) {\n        let particleArray = [];\n        for(let i = 0, len = elements.length; i < len; i++){\n            let particle = new CharParticle(elements[i]);\n            particleArray.push(particle);\n            particles.push(particle);\n        }\n        return particleArray;\n    };\n    ParticleEffects.initCharParticles = function() {\n        if (isInitialized) for(let i = 0, len = particles.length; i < len; i++)particles[i].updatePosition();\n        else {\n            ParticleEffects.addCharParticles(ParticleEffects.initialParticleElems);\n            if (ParticleEffects.isTouch) document.addEventListener(\"touchstart\", onTouchStart, false);\n            else document.addEventListener(\"mousedown\", onMouseDown, false);\n            animate();\n            isInitialized = true;\n        }\n    };\n    // Initialization of particles and event listeners\n    let isParticlesInitialized = false;\n    ParticleEffects.initialParticleElems = [];\n    function initialize() {\n        if (!isParticlesInitialized) {\n            let splitElements = document.querySelectorAll(\".split\");\n            for(let i = 0, len = splitElements.length; i < len; i++){\n                let charElements = ParticleEffects.parseForParticles(splitElements[i]);\n                ParticleEffects.initialParticleElems = ParticleEffects.initialParticleElems.concat(charElements);\n            }\n            if (!ParticleEffects.isTouch) document.addEventListener(\"mouseover\", ParticleEffects.onMouseover, false);\n            isParticlesInitialized = true;\n        }\n        setTimeout(()=>{\n            ParticleEffects.initCharParticles();\n        }, 1000);\n    }\n    global.addEventListener(\"DOMContentLoaded\", initialize, false);\n    if (!ParticleEffects.isTouch) global.onload = initialize;\n    // Utility function to get vendor-prefixed CSS property\n    function getVendorPrefixedProperty(property) {\n        let prefixes = [\n            \"\",\n            \"Webkit\",\n            \"Moz\",\n            \"ms\",\n            \"O\"\n        ];\n        let style = document.createElement(\"div\").style;\n        for(let i = 0; i < prefixes.length; i++){\n            let prop = prefixes[i] ? prefixes[i] + property.charAt(0).toUpperCase() + property.slice(1) : property;\n            if (prop in style) return prop;\n        }\n        return null;\n    }\n})(window);\n\n//# sourceMappingURL=index.dec9bc36.js.map\n","// Define a function to detect mobile devices\r\nfunction isMobileDevice() {\r\n    return (\r\n        /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n            navigator.userAgent\r\n        ) ||\r\n        \"ontouchstart\" in window ||\r\n        navigator.maxTouchPoints > 0 ||\r\n        window.matchMedia(\"(pointer: coarse)\").matches\r\n    )\r\n}\r\n\r\n;(function () {\r\n    const cursor = new MouseFollower()\r\n\r\n    cursor.setText(\"Drag me\")\r\n\r\n    if (!isMobileDevice()) {\r\n        // Mouse events\r\n        document.addEventListener(\"mousedown\", () => {\r\n            cursor.setText(\"Thanks for Visiting\")\r\n        })\r\n\r\n        document.addEventListener(\"mouseup\", () => {\r\n            cursor.removeText()\r\n        })\r\n    } else {\r\n        function updateCursorPosition(touch) {\r\n            const x = touch.clientX\r\n            const y = touch.clientY\r\n            // Simulate mousemove event\r\n            const mouseEvent = new MouseEvent(\"mousemove\", {\r\n                clientX: x,\r\n                clientY: y,\r\n                bubbles: true,\r\n            })\r\n            document.body.dispatchEvent(mouseEvent)\r\n        }\r\n\r\n        updateCursorPosition({\r\n            clientX: 500,\r\n            clientY: 340,\r\n        })\r\n\r\n        document.addEventListener(\r\n            \"touchstart\",\r\n            (event) => {\r\n                cursor.addState(\"-active\")\r\n                cursor.setText(\"Thanks for Visiting\")\r\n                updateCursorPosition(event.touches[0])\r\n            },\r\n            { passive: false }\r\n        )\r\n\r\n        document.addEventListener(\r\n            \"touchmove\",\r\n            (event) => {\r\n                updateCursorPosition(event.touches[0])\r\n            },\r\n            { passive: false }\r\n        )\r\n\r\n        document.addEventListener(\"touchend\", () => {\r\n            cursor.removeState(\"-active\")\r\n            cursor.removeText()\r\n        })\r\n    }\r\n})()\r\n\r\n// Polyfill for requestAnimationFrame and cancelAnimationFrame\r\n!(function (global) {\r\n    \"use strict\"\r\n    let lastTime = 0\r\n    let vendors = [\"webkit\", \"moz\", \"ms\", \"o\"]\r\n    let requestAnimationFrame = global.requestAnimationFrame\r\n    let cancelAnimationFrame = global.cancelAnimationFrame\r\n    let prefix\r\n\r\n    // Check for vendor-prefixed versions\r\n    for (\r\n        let i = 0;\r\n        i < vendors.length && (!requestAnimationFrame || !cancelAnimationFrame);\r\n        i++\r\n    ) {\r\n        prefix = vendors[i]\r\n        requestAnimationFrame =\r\n            requestAnimationFrame || global[prefix + \"RequestAnimationFrame\"]\r\n        cancelAnimationFrame =\r\n            cancelAnimationFrame ||\r\n            global[prefix + \"CancelAnimationFrame\"] ||\r\n            global[prefix + \"CancelRequestAnimationFrame\"]\r\n    }\r\n\r\n    // Fallback to setTimeout if necessary\r\n    if (!requestAnimationFrame || !cancelAnimationFrame) {\r\n        requestAnimationFrame = function (callback) {\r\n            let currentTime = new Date().getTime()\r\n            let timeToCall = Math.max(0, 16 - (currentTime - lastTime))\r\n            let id = global.setTimeout(function () {\r\n                callback(currentTime + timeToCall)\r\n            }, timeToCall)\r\n            lastTime = currentTime + timeToCall\r\n            return id\r\n        }\r\n\r\n        cancelAnimationFrame = function (id) {\r\n            global.clearTimeout(id)\r\n        }\r\n    }\r\n\r\n    // Assign the correct methods to the global object\r\n    global.requestAnimationFrame = requestAnimationFrame\r\n    global.cancelAnimationFrame = cancelAnimationFrame\r\n})(window)\r\n\r\n// ParticleEffects namespace and related functionality\r\n;(function (global) {\r\n    \"use strict\"\r\n\r\n    // Define the ParticleEffects namespace and utility functions\r\n    const ParticleEffects = (global.ParticleEffects = {})\r\n\r\n    ParticleEffects.isTouch = \"ontouchstart\" in document.documentElement\r\n\r\n    ParticleEffects.getTaggedElem = function (element, tagName) {\r\n        if (!element.dataset.icon) {\r\n            return false\r\n        }\r\n\r\n        while (element && element.nodeType !== 9) {\r\n            if (\r\n                element.nodeName &&\r\n                element.nodeName.toLowerCase() === tagName\r\n            ) {\r\n                return element\r\n            }\r\n            element = element.parentNode\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    ParticleEffects.charCount = 0\r\n    ParticleEffects.charElems = []\r\n\r\n    ParticleEffects.parseForParticles = function (element) {\r\n        let words = element.textContent.split(\" \")\r\n\r\n        let icon = element.dataset?.icon\r\n        if (icon) {\r\n            words = [\" \"]\r\n            element.dataset.icon = \"\"\r\n        }\r\n\r\n        while (element.firstChild) element.removeChild(element.firstChild)\r\n\r\n        let fragment = document.createDocumentFragment()\r\n        let wordSpans = []\r\n        let charSpans = []\r\n\r\n        for (let i = 0; i < words.length; i++) {\r\n            let word = words[i]\r\n            let wordSpan = document.createElement(\"span\")\r\n            wordSpan.className = \"word\"\r\n            wordSpans.push(wordSpan)\r\n\r\n            let chars = word.split(\"\")\r\n            for (let j = 0; j < chars.length; j++) {\r\n                let charSpan = document.createElement(\"span\")\r\n                charSpan.className = \"char\"\r\n                charSpan.textContent = chars[j]\r\n                if (icon) {\r\n                    charSpan.textContent = \"\"\r\n                    charSpan.dataset.icon = icon\r\n                }\r\n                charSpans.push(charSpan)\r\n                wordSpan.appendChild(charSpan)\r\n                ParticleEffects.charCount++\r\n            }\r\n            fragment.appendChild(wordSpan)\r\n            fragment.appendChild(document.createTextNode(\" \"))\r\n        }\r\n        element.appendChild(fragment)\r\n        return charSpans\r\n    }\r\n\r\n    // Sparkle effect for hovered elements using ES6 Classes\r\n    let currentElement\r\n\r\n    class SparkleEffect {\r\n        constructor(element) {\r\n            this.element = element\r\n            this.chars = element.querySelectorAll(\".char\")\r\n            this.charsLen = this.chars.length\r\n            if (this.charsLen) {\r\n                this.endIndex = 0\r\n                this.startIndex = 0\r\n                this.hueIndex = Math.floor(360 * Math.random())\r\n                this.colors = []\r\n                this.isHovered = true\r\n                this.isSparkling = true\r\n                this.sparkle()\r\n                currentElement = element\r\n                document.addEventListener(\"mouseover\", this, false)\r\n            }\r\n        }\r\n\r\n        handleEvent(event) {\r\n            let handlerName = event.type + \"Handler\"\r\n            if (this[handlerName]) this[handlerName](event)\r\n        }\r\n\r\n        mouseoverHandler(event) {\r\n            if (!this.element.contains(event.target)) {\r\n                this.isHovered = false\r\n                currentElement = null\r\n                document.removeEventListener(\"mouseover\", this, false)\r\n            }\r\n        }\r\n\r\n        sparkle() {\r\n            this.endIndex = Math.min(this.endIndex + 1, this.charsLen)\r\n            let hue = ((10 * this.hueIndex) % 240) + 120\r\n            let color = this.isHovered ? \"hsl(\" + hue + \", 70%, 80%)\" : \"#00073c\"\r\n            this.colors.unshift(color)\r\n\r\n            for (let i = this.startIndex; i < this.endIndex; i++) {\r\n                this.chars[i].style.color = this.colors[i]\r\n            }\r\n\r\n            if (this.isHovered) {\r\n                this.hueIndex++\r\n            } else {\r\n                this.startIndex = Math.min(this.startIndex + 1, this.charsLen)\r\n            }\r\n\r\n            this.isSparkling = this.startIndex !== this.charsLen\r\n            if (this.isSparkling) requestAnimationFrame(this.sparkle.bind(this))\r\n        }\r\n    }\r\n\r\n    ParticleEffects.onMouseover = function (event) {\r\n        let anchor = ParticleEffects.getTaggedElem(event.target, \"a\")\r\n        if (\r\n            !ParticleEffects.isCursorActive &&\r\n            anchor &&\r\n            anchor !== currentElement\r\n        )\r\n            new SparkleEffect(anchor)\r\n    }\r\n\r\n    // Particle system for characters using ES6 Classes\r\n    let cursorX, cursorY\r\n    const TAU = 2 * Math.PI\r\n    const interactionRadius = 250\r\n    const transformProperty = getVendorPrefixedProperty(\"transform\")\r\n    let particles = (ParticleEffects.charParticles = [])\r\n    let particleIndex = 0\r\n    let isAllParticlesSettled = true\r\n    let isInitialized = false\r\n\r\n    // Feature detection functions\r\n    function supportsTransforms() {\r\n        const style = document.createElement(\"div\").style\r\n        return (\r\n            \"transform\" in style ||\r\n            \"WebkitTransform\" in style ||\r\n            \"MozTransform\" in style ||\r\n            \"msTransform\" in style ||\r\n            \"OTransform\" in style\r\n        )\r\n    }\r\n\r\n    function supports3DTransforms() {\r\n        const div = document.createElement(\"div\")\r\n        div.style.cssText = \"transform: rotateY(45deg);\"\r\n        const has3d = div.style.transform !== \"\"\r\n        if (has3d) return true\r\n\r\n        const prefixes = [\"Webkit\", \"Moz\", \"ms\", \"O\"]\r\n        for (let i = 0; i < prefixes.length; i++) {\r\n            div.style.cssText = prefixes[i] + \"Transform: rotateY(45deg);\"\r\n            if (div.style[prefixes[i] + \"Transform\"] !== \"\") {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    const hasTransforms = supportsTransforms()\r\n    const has3DTransforms = supports3DTransforms()\r\n\r\n    class CharParticle {\r\n        constructor(element) {\r\n            this.index = particleIndex++\r\n            this.element = element\r\n            this.x = 0\r\n            this.y = 0\r\n            this.angle = 0\r\n            this.scale = 1\r\n            this.velocityX = 0\r\n            this.velocityY = 0\r\n            this.velocityR = 0\r\n            this.isSettled = true\r\n            this.wasSettled = true\r\n            this.updatePosition()\r\n        }\r\n\r\n        updatePosition() {\r\n            let elem = this.element\r\n            this.width = elem.offsetWidth\r\n            this.height = elem.offsetHeight\r\n            this.originX = elem.offsetLeft + this.width / 2\r\n            this.originY = elem.offsetTop + this.height / 2\r\n        }\r\n\r\n        update() {\r\n            let dx = cursorX - (this.originX + this.x)\r\n            let dy = cursorY - (this.originY + this.y)\r\n            let distance = Math.sqrt(dx * dx + dy * dy)\r\n            let rotationForce = 0\r\n\r\n            if (\r\n                ParticleEffects.isCursorActive &&\r\n                interactionRadius > distance\r\n            ) {\r\n                let interactionStrength = 1 - distance / interactionRadius\r\n                let angleToCursor = Math.atan2(dy, dx)\r\n                rotationForce = angleToCursor - Math.PI / 2\r\n                rotationForce *= Math.min(3 * interactionStrength, 1)\r\n\r\n                let angleDifference = Math.abs(rotationForce - this.angle)\r\n                if (\r\n                    Math.abs(rotationForce - TAU - this.angle) < angleDifference\r\n                ) {\r\n                    rotationForce -= TAU\r\n                } else if (\r\n                    Math.abs(rotationForce + TAU - this.angle) < angleDifference\r\n                ) {\r\n                    rotationForce += TAU\r\n                }\r\n\r\n                interactionStrength *= 3.5 * interactionStrength\r\n                this.velocityX += Math.cos(angleToCursor) * -interactionStrength\r\n                this.velocityY += Math.sin(angleToCursor) * -interactionStrength\r\n            }\r\n\r\n            this.angle = this.angle % TAU\r\n            this.velocityX += 0.005 * (0 - this.x)\r\n            this.velocityY += 0.005 * (0 - this.y)\r\n            this.velocityR += rotationForce - this.angle\r\n            this.x += this.velocityX\r\n            this.y += this.velocityY\r\n            this.angle += 0.01 * this.velocityR\r\n            this.velocityX *= 0.95\r\n            this.velocityY *= 0.95\r\n            this.velocityR *= 0.95\r\n\r\n            let totalDistance = Math.sqrt(this.x * this.x + this.y * this.y)\r\n            this.scale = 2 * (totalDistance / interactionRadius) + 1\r\n\r\n            let isCurrentlySettled =\r\n                Math.abs(this.x) < 0.03 &&\r\n                Math.abs(this.y) < 0.03 &&\r\n                Math.abs(this.angle) < 0.004 &&\r\n                Math.abs(this.scale - 1) < 0.03\r\n            this.isSettled = this.wasSettled && isCurrentlySettled\r\n            isAllParticlesSettled = isAllParticlesSettled && this.isSettled\r\n            this.wasSettled = isCurrentlySettled\r\n            this.render()\r\n        }\r\n\r\n        render() {\r\n            if (hasTransforms) {\r\n                if (has3DTransforms) {\r\n                    this.element.style[transformProperty] = this.isSettled\r\n                        ? \"none\"\r\n                        : `translate3d(${this.x}px, ${this.y}px, 0) scale(${this.scale}) rotate(${this.angle}rad)`\r\n                } else {\r\n                    this.element.style[transformProperty] = this.isSettled\r\n                        ? \"none\"\r\n                        : `translate(${this.x}px, ${this.y}px) scale(${this.scale}) rotate(${this.angle}rad)`\r\n                }\r\n            } else {\r\n                this.element.style.left = this.x + \"px\"\r\n                this.element.style.top = this.y + \"px\"\r\n            }\r\n        }\r\n    }\r\n\r\n    function onMouseDown(event) {\r\n        activateCursor(event, event)\r\n    }\r\n\r\n    function onTouchStart(event) {\r\n        if (!ParticleEffects.isCursorActive) {\r\n            let touch = event.changedTouches[0]\r\n            if (touch) {\r\n                primaryTouchId = touch.identifier\r\n                activateCursor(touch, event)\r\n            }\r\n        }\r\n    }\r\n\r\n    function activateCursor(event, originalEvent) {\r\n        ParticleEffects.isCursorActive = true\r\n        ParticleEffects.areAllCharParticlesSettled = false\r\n        cursorX = event.pageX\r\n        cursorY = event.pageY\r\n        originalEvent.preventDefault()\r\n\r\n        if (ParticleEffects.isTouch) {\r\n            global.addEventListener(\"touchmove\", onTouchMove, false)\r\n            global.addEventListener(\"touchend\", onTouchEnd, false)\r\n        } else {\r\n            global.addEventListener(\"mousemove\", onMouseMove, false)\r\n            global.addEventListener(\"mouseup\", onMouseUp, false)\r\n        }\r\n    }\r\n\r\n    function onMouseMove(event) {\r\n        updateCursorPosition(event)\r\n    }\r\n\r\n    function onTouchMove(event) {\r\n        if (ParticleEffects.isCursorActive) {\r\n            for (let i = 0; i < event.changedTouches.length; i++) {\r\n                let touch = event.changedTouches[i]\r\n                if (touch.identifier === primaryTouchId) {\r\n                    updateCursorPosition(touch)\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function onTouchEnd(event) {\r\n        for (let i = 0; i < event.changedTouches.length; i++) {\r\n            let touch = event.changedTouches[i]\r\n            if (touch.identifier === primaryTouchId) {\r\n                deactivateCursor()\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    function updateCursorPosition(event) {\r\n        cursorX = parseInt(event.pageX, 10)\r\n        cursorY = parseInt(event.pageY, 10)\r\n    }\r\n\r\n    function onMouseUp() {\r\n        ParticleEffects.isCursorActive = false\r\n        global.removeEventListener(\"mousemove\", onMouseMove, false)\r\n        global.removeEventListener(\"mouseup\", onMouseUp, false)\r\n    }\r\n\r\n    function deactivateCursor() {\r\n        ParticleEffects.isCursorActive = false\r\n        if (ParticleEffects.isTouch) {\r\n            global.removeEventListener(\"touchmove\", onTouchMove, false)\r\n            global.removeEventListener(\"touchend\", onTouchEnd, false)\r\n        } else {\r\n            global.removeEventListener(\"mousemove\", onMouseMove, false)\r\n            global.removeEventListener(\"mouseup\", onMouseUp, false)\r\n        }\r\n    }\r\n\r\n    function animate() {\r\n        if (!ParticleEffects.areAllCharParticlesSettled) {\r\n            isAllParticlesSettled = true\r\n            for (let i = 0, len = particles.length; i < len; i++) {\r\n                particles[i].update()\r\n            }\r\n            ParticleEffects.areAllCharParticlesSettled = isAllParticlesSettled\r\n        }\r\n        requestAnimationFrame(animate)\r\n    }\r\n\r\n    let primaryTouchId\r\n\r\n    ParticleEffects.addCharParticles = function (elements) {\r\n        let particleArray = []\r\n        for (let i = 0, len = elements.length; i < len; i++) {\r\n            let particle = new CharParticle(elements[i])\r\n            particleArray.push(particle)\r\n            particles.push(particle)\r\n        }\r\n        return particleArray\r\n    }\r\n\r\n    ParticleEffects.initCharParticles = function () {\r\n        if (isInitialized) {\r\n            for (let i = 0, len = particles.length; i < len; i++) {\r\n                particles[i].updatePosition()\r\n            }\r\n        } else {\r\n            ParticleEffects.addCharParticles(\r\n                ParticleEffects.initialParticleElems\r\n            )\r\n            if (ParticleEffects.isTouch) {\r\n                document.addEventListener(\"touchstart\", onTouchStart, false)\r\n            } else {\r\n                document.addEventListener(\"mousedown\", onMouseDown, false)\r\n            }\r\n            animate()\r\n            isInitialized = true\r\n        }\r\n    }\r\n\r\n    // Initialization of particles and event listeners\r\n    let isParticlesInitialized = false\r\n\r\n    ParticleEffects.initialParticleElems = []\r\n\r\n    function initialize() {\r\n        if (!isParticlesInitialized) {\r\n            let splitElements = document.querySelectorAll(\".split\")\r\n            for (let i = 0, len = splitElements.length; i < len; i++) {\r\n                let charElements = ParticleEffects.parseForParticles(\r\n                    splitElements[i]\r\n                )\r\n                ParticleEffects.initialParticleElems =\r\n                    ParticleEffects.initialParticleElems.concat(charElements)\r\n            }\r\n            if (!ParticleEffects.isTouch) {\r\n                document.addEventListener(\r\n                    \"mouseover\",\r\n                    ParticleEffects.onMouseover,\r\n                    false\r\n                )\r\n            }\r\n\r\n            isParticlesInitialized = true\r\n        }\r\n\r\n        setTimeout(() => {\r\n            ParticleEffects.initCharParticles()\r\n        }, 1000)\r\n    }\r\n\r\n    global.addEventListener(\"DOMContentLoaded\", initialize, false)\r\n\r\n    if (!ParticleEffects.isTouch) {\r\n        global.onload = initialize\r\n    }\r\n\r\n    // Utility function to get vendor-prefixed CSS property\r\n    function getVendorPrefixedProperty(property) {\r\n        let prefixes = [\"\", \"Webkit\", \"Moz\", \"ms\", \"O\"]\r\n        let style = document.createElement(\"div\").style\r\n\r\n        for (let i = 0; i < prefixes.length; i++) {\r\n            let prop = prefixes[i]\r\n                ? prefixes[i] +\r\n                  property.charAt(0).toUpperCase() +\r\n                  property.slice(1)\r\n                : property\r\n            if (prop in style) {\r\n                return prop\r\n            }\r\n        }\r\n        return null\r\n    }\r\n})(window)\r\n"],"names":["cursor","MouseFollower","setText","test","navigator","userAgent","window","maxTouchPoints","matchMedia","matches","updateCursorPosition","touch","mouseEvent","MouseEvent","clientX","clientY","bubbles","document","body","dispatchEvent","addEventListener","event","addState","touches","passive","removeState","removeText","global","prefix","lastTime","vendors","requestAnimationFrame1","requestAnimationFrame","cancelAnimationFrame","i","length","callback","currentTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","currentElement","cursorX","cursorY","primaryTouchId","ParticleEffects","isTouch","documentElement","getTaggedElem","element","tagName","dataset","icon","nodeType","nodeName","toLowerCase","parentNode","charCount","charElems","parseForParticles","words","textContent","split","firstChild","removeChild","fragment","createDocumentFragment","wordSpans","charSpans","word","wordSpan","createElement","className","push","chars","j","charSpan","appendChild","createTextNode","SparkleEffect","constructor","querySelectorAll","charsLen","endIndex","startIndex","hueIndex","floor","random","colors","isHovered","isSparkling","sparkle","handleEvent","handlerName","type","mouseoverHandler","contains","target","removeEventListener","min","hue","color","unshift","style","bind","onMouseover","anchor","isCursorActive","TAU","PI","transformProperty","getVendorPrefixedProperty","property","prefixes","prop","charAt","toUpperCase","slice","particles","charParticles","particleIndex","isAllParticlesSettled","isInitialized","hasTransforms","supportsTransforms","has3DTransforms","supports3DTransforms","div","cssText","transform","CharParticle","index","x","y","angle","scale","velocityX","velocityY","velocityR","isSettled","wasSettled","updatePosition","elem","width","offsetWidth","height","offsetHeight","originX","offsetLeft","originY","offsetTop","update","dx","dy","distance","sqrt","rotationForce","interactionRadius","interactionStrength","angleToCursor","atan2","angleDifference","abs","cos","sin","totalDistance","isCurrentlySettled","render","left","top","onMouseDown","activateCursor","onTouchStart","changedTouches","identifier","originalEvent","areAllCharParticlesSettled","pageX","pageY","preventDefault","onTouchMove","onTouchEnd","onMouseMove","onMouseUp","parseInt","addCharParticles","elements","particleArray","len","particle","initCharParticles","initialParticleElems","animate","isParticlesInitialized","initialize","splitElements","charElements","concat","onload"],"version":3,"file":"index.dec9bc36.js.map"}